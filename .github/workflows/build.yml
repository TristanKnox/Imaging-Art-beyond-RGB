name: Build and Release on macOS

on:
  push:
    branches:
      - develop
  pull_request:

jobs:
  build-and-release:
    runs-on: macos-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Homebrew
      run: |
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> ~/.zprofile
        eval "$(/opt/homebrew/bin/brew shellenv)"

    - name: Install dependencies
      run: |
        brew install git cmake pkg-config node

    - name: Print directory structure before configuring backend
      run: |
        echo "Directory structure BEFORE configuring backend:"
        ls -R ${{ github.workspace }}

    - name: Configure backend
      run: |
        # Set macOS version
        macOS_vers_num=10.15

        # Navigate to backend directory
        cd ${{ github.workspace }}/backend

        # Check if vcpkg is properly set up
        if ! [ -f "vcpkg/bootstrap-vcpkg.sh" ]; then
          echo "vcpkg not set up or incomplete, initializing..."
          rm -rf vcpkg  # Ensure a clean state
          git clone https://github.com/microsoft/vcpkg
          sh vcpkg/bootstrap-vcpkg.sh

          # Append minimum macOS version to vcpkg/triplets/x64-osx.cmake
          echo "set(VCPKG_C_FLAGS -mmacosx-version-min=$macOS_vers_num)" >> vcpkg/triplets/x64-osx.cmake
          echo "set(VCPKG_CXX_FLAGS -mmacosx-version-min=$macOS_vers_num)" >> vcpkg/triplets/x64-osx.cmake
        fi

        # Check for vcpkg updates
        cd vcpkg
        git pull --ff-only
        sh bootstrap-vcpkg.sh
        cd ..

        # Install dependencies
        export MACOSX_DEPLOYMENT_TARGET=$macOS_vers_num
        export VCPKG_OSX_DEPLOYMENT_TARGET=$macOS_vers_num
        export VCPKG_KEEP_ENV_VARS="VCPKG_OSX_DEPLOYMENT_TARGET;MACOSX_DEPLOYMENT_TARGET"
        packages=$(cat "dependencies.txt")
        for p in $packages
        do
          ./vcpkg/vcpkg install $p
        done

    - name: Print directory structure after configuring backend
      run: |
        echo "Directory structure AFTER configuring backend:"
        ls -R ${{ github.workspace }}

    - name: Set up frontend
      run: |
        cd ${{ github.workspace }}/frontend
        npm ci

    - name: Build backend
      run: |
        cd ${{ github.workspace }}/backend
        sh osx_release.sh

    - name: Release frontend
      run: |
        cd ${{ github.workspace }}/frontend
        sh release_frontend.sh

    - name: Upload macOS application artifact
      uses: actions/upload-artifact@v4
      with:
        name: Beyond_RGB-darwin-x64
        path: ${{ github.workspace }}/frontend/out/Beyond_RGB-darwin-x64
